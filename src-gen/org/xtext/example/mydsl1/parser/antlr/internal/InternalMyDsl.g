/*
 * generated by Xtext 2.32.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl1.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl1.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getCommandsCommandParserRuleCall_0());
			}
			lv_commands_0_0=ruleCommand
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"commands",
					lv_commands_0_0,
					"org.xtext.example.mydsl1.MyDsl.Command");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getOpenBrowserCommandParserRuleCall_0());
		}
		this_OpenBrowserCommand_0=ruleOpenBrowserCommand
		{
			$current = $this_OpenBrowserCommand_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getNavigateToCommandParserRuleCall_1());
		}
		this_NavigateToCommand_1=ruleNavigateToCommand
		{
			$current = $this_NavigateToCommand_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getClickCommandParserRuleCall_2());
		}
		this_ClickCommand_2=ruleClickCommand
		{
			$current = $this_ClickCommand_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getFillCommandParserRuleCall_3());
		}
		this_FillCommand_3=ruleFillCommand
		{
			$current = $this_FillCommand_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getSelectCommandParserRuleCall_4());
		}
		this_SelectCommand_4=ruleSelectCommand
		{
			$current = $this_SelectCommand_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getVerifyCommandParserRuleCall_5());
		}
		this_VerifyCommand_5=ruleVerifyCommand
		{
			$current = $this_VerifyCommand_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getReadCommandParserRuleCall_6());
		}
		this_ReadCommand_6=ruleReadCommand
		{
			$current = $this_ReadCommand_6.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpenBrowserCommand
entryRuleOpenBrowserCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpenBrowserCommandRule()); }
	iv_ruleOpenBrowserCommand=ruleOpenBrowserCommand
	{ $current=$iv_ruleOpenBrowserCommand.current; }
	EOF;

// Rule OpenBrowserCommand
ruleOpenBrowserCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getOpenBrowserCommandAccess().getOpenBrowserAction_0(),
					$current);
			}
		)
		otherlv_1='open'
		{
			newLeafNode(otherlv_1, grammarAccess.getOpenBrowserCommandAccess().getOpenKeyword_1());
		}
		otherlv_2='a'
		{
			newLeafNode(otherlv_2, grammarAccess.getOpenBrowserCommandAccess().getAKeyword_2());
		}
		otherlv_3='browser'
		{
			newLeafNode(otherlv_3, grammarAccess.getOpenBrowserCommandAccess().getBrowserKeyword_3());
		}
		otherlv_4='window'
		{
			newLeafNode(otherlv_4, grammarAccess.getOpenBrowserCommandAccess().getWindowKeyword_4());
		}
	)
;

// Entry rule entryRuleNavigateToCommand
entryRuleNavigateToCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNavigateToCommandRule()); }
	iv_ruleNavigateToCommand=ruleNavigateToCommand
	{ $current=$iv_ruleNavigateToCommand.current; }
	EOF;

// Rule NavigateToCommand
ruleNavigateToCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='go'
		{
			newLeafNode(otherlv_0, grammarAccess.getNavigateToCommandAccess().getGoKeyword_0());
		}
		otherlv_1='to'
		{
			newLeafNode(otherlv_1, grammarAccess.getNavigateToCommandAccess().getToKeyword_1());
		}
		otherlv_2='the'
		{
			newLeafNode(otherlv_2, grammarAccess.getNavigateToCommandAccess().getTheKeyword_2());
		}
		otherlv_3='url'
		{
			newLeafNode(otherlv_3, grammarAccess.getNavigateToCommandAccess().getUrlKeyword_3());
		}
		(
			(
				lv_url_4_0=RULE_STRING
				{
					newLeafNode(lv_url_4_0, grammarAccess.getNavigateToCommandAccess().getUrlSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNavigateToCommandRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_4_0,
						"org.xtext.example.mydsl1.MyDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleClickCommand
entryRuleClickCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClickCommandRule()); }
	iv_ruleClickCommand=ruleClickCommand
	{ $current=$iv_ruleClickCommand.current; }
	EOF;

// Rule ClickCommand
ruleClickCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				otherlv_0='click'
				{
					newLeafNode(otherlv_0, grammarAccess.getClickCommandAccess().getClickKeyword_0_0_0());
				}
				otherlv_1='on'
				{
					newLeafNode(otherlv_1, grammarAccess.getClickCommandAccess().getOnKeyword_0_0_1());
				}
				otherlv_2='the'
				{
					newLeafNode(otherlv_2, grammarAccess.getClickCommandAccess().getTheKeyword_0_0_2());
				}
				otherlv_3='link'
				{
					newLeafNode(otherlv_3, grammarAccess.getClickCommandAccess().getLinkKeyword_0_0_3());
				}
			)
			    |
			(
				otherlv_4='click'
				{
					newLeafNode(otherlv_4, grammarAccess.getClickCommandAccess().getClickKeyword_0_1_0());
				}
				otherlv_5='on'
				{
					newLeafNode(otherlv_5, grammarAccess.getClickCommandAccess().getOnKeyword_0_1_1());
				}
				otherlv_6='the'
				{
					newLeafNode(otherlv_6, grammarAccess.getClickCommandAccess().getTheKeyword_0_1_2());
				}
				otherlv_7='button'
				{
					newLeafNode(otherlv_7, grammarAccess.getClickCommandAccess().getButtonKeyword_0_1_3());
				}
				otherlv_8='with'
				{
					newLeafNode(otherlv_8, grammarAccess.getClickCommandAccess().getWithKeyword_0_1_4());
				}
				otherlv_9='text'
				{
					newLeafNode(otherlv_9, grammarAccess.getClickCommandAccess().getTextKeyword_0_1_5());
				}
			)
		)
		(
			(
				lv_elementText_10_0=RULE_STRING
				{
					newLeafNode(lv_elementText_10_0, grammarAccess.getClickCommandAccess().getElementTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getClickCommandRule());
					}
					setWithLastConsumed(
						$current,
						"elementText",
						lv_elementText_10_0,
						"org.xtext.example.mydsl1.MyDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleFillCommand
entryRuleFillCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFillCommandRule()); }
	iv_ruleFillCommand=ruleFillCommand
	{ $current=$iv_ruleFillCommand.current; }
	EOF;

// Rule FillCommand
ruleFillCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='fill'
		{
			newLeafNode(otherlv_0, grammarAccess.getFillCommandAccess().getFillKeyword_0());
		}
		otherlv_1='the'
		{
			newLeafNode(otherlv_1, grammarAccess.getFillCommandAccess().getTheKeyword_1());
		}
		otherlv_2='field'
		{
			newLeafNode(otherlv_2, grammarAccess.getFillCommandAccess().getFieldKeyword_2());
		}
		(
			(
				lv_fieldName_3_0=RULE_STRING
				{
					newLeafNode(lv_fieldName_3_0, grammarAccess.getFillCommandAccess().getFieldNameSTRINGTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFillCommandRule());
					}
					setWithLastConsumed(
						$current,
						"fieldName",
						lv_fieldName_3_0,
						"org.xtext.example.mydsl1.MyDsl.STRING");
				}
			)
		)
		otherlv_4='with'
		{
			newLeafNode(otherlv_4, grammarAccess.getFillCommandAccess().getWithKeyword_4());
		}
		(
			(
				lv_fieldValue_5_0=RULE_STRING
				{
					newLeafNode(lv_fieldValue_5_0, grammarAccess.getFillCommandAccess().getFieldValueSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFillCommandRule());
					}
					setWithLastConsumed(
						$current,
						"fieldValue",
						lv_fieldValue_5_0,
						"org.xtext.example.mydsl1.MyDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleSelectCommand
entryRuleSelectCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectCommandRule()); }
	iv_ruleSelectCommand=ruleSelectCommand
	{ $current=$iv_ruleSelectCommand.current; }
	EOF;

// Rule SelectCommand
ruleSelectCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='select'
		{
			newLeafNode(otherlv_0, grammarAccess.getSelectCommandAccess().getSelectKeyword_0());
		}
		otherlv_1='the'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectCommandAccess().getTheKeyword_1());
		}
		otherlv_2='checkbox'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectCommandAccess().getCheckboxKeyword_2());
		}
		otherlv_3='named'
		{
			newLeafNode(otherlv_3, grammarAccess.getSelectCommandAccess().getNamedKeyword_3());
		}
		(
			(
				lv_checkboxName_4_0=RULE_STRING
				{
					newLeafNode(lv_checkboxName_4_0, grammarAccess.getSelectCommandAccess().getCheckboxNameSTRINGTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSelectCommandRule());
					}
					setWithLastConsumed(
						$current,
						"checkboxName",
						lv_checkboxName_4_0,
						"org.xtext.example.mydsl1.MyDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleVerifyCommand
entryRuleVerifyCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVerifyCommandRule()); }
	iv_ruleVerifyCommand=ruleVerifyCommand
	{ $current=$iv_ruleVerifyCommand.current; }
	EOF;

// Rule VerifyCommand
ruleVerifyCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='verify'
		{
			newLeafNode(otherlv_0, grammarAccess.getVerifyCommandAccess().getVerifyKeyword_0());
		}
		otherlv_1='that'
		{
			newLeafNode(otherlv_1, grammarAccess.getVerifyCommandAccess().getThatKeyword_1());
		}
		otherlv_2='the'
		{
			newLeafNode(otherlv_2, grammarAccess.getVerifyCommandAccess().getTheKeyword_2());
		}
		otherlv_3='page'
		{
			newLeafNode(otherlv_3, grammarAccess.getVerifyCommandAccess().getPageKeyword_3());
		}
		otherlv_4='contains'
		{
			newLeafNode(otherlv_4, grammarAccess.getVerifyCommandAccess().getContainsKeyword_4());
		}
		(
			(
				(
					otherlv_5='a'
					{
						newLeafNode(otherlv_5, grammarAccess.getVerifyCommandAccess().getAKeyword_5_0_0());
					}
				)?
				otherlv_6='link'
				{
					newLeafNode(otherlv_6, grammarAccess.getVerifyCommandAccess().getLinkKeyword_5_0_1());
				}
			)
			    |
			(
				otherlv_7='the'
				{
					newLeafNode(otherlv_7, grammarAccess.getVerifyCommandAccess().getTheKeyword_5_1_0());
				}
				otherlv_8='string'
				{
					newLeafNode(otherlv_8, grammarAccess.getVerifyCommandAccess().getStringKeyword_5_1_1());
				}
			)
		)
		(
			(
				lv_verifyString_9_0=RULE_STRING
				{
					newLeafNode(lv_verifyString_9_0, grammarAccess.getVerifyCommandAccess().getVerifyStringSTRINGTerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVerifyCommandRule());
					}
					setWithLastConsumed(
						$current,
						"verifyString",
						lv_verifyString_9_0,
						"org.xtext.example.mydsl1.MyDsl.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleReadCommand
entryRuleReadCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadCommandRule()); }
	iv_ruleReadCommand=ruleReadCommand
	{ $current=$iv_ruleReadCommand.current; }
	EOF;

// Rule ReadCommand
ruleReadCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='read'
		{
			newLeafNode(otherlv_0, grammarAccess.getReadCommandAccess().getReadKeyword_0());
		}
		otherlv_1='the'
		{
			newLeafNode(otherlv_1, grammarAccess.getReadCommandAccess().getTheKeyword_1());
		}
		otherlv_2='element'
		{
			newLeafNode(otherlv_2, grammarAccess.getReadCommandAccess().getElementKeyword_2());
		}
		otherlv_3='with'
		{
			newLeafNode(otherlv_3, grammarAccess.getReadCommandAccess().getWithKeyword_3());
		}
		otherlv_4='text'
		{
			newLeafNode(otherlv_4, grammarAccess.getReadCommandAccess().getTextKeyword_4());
		}
		(
			(
				lv_elementText_5_0=RULE_STRING
				{
					newLeafNode(lv_elementText_5_0, grammarAccess.getReadCommandAccess().getElementTextSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadCommandRule());
					}
					setWithLastConsumed(
						$current,
						"elementText",
						lv_elementText_5_0,
						"org.xtext.example.mydsl1.MyDsl.STRING");
				}
			)
		)
		otherlv_6='and'
		{
			newLeafNode(otherlv_6, grammarAccess.getReadCommandAccess().getAndKeyword_6());
		}
		otherlv_7='store'
		{
			newLeafNode(otherlv_7, grammarAccess.getReadCommandAccess().getStoreKeyword_7());
		}
		otherlv_8='it'
		{
			newLeafNode(otherlv_8, grammarAccess.getReadCommandAccess().getItKeyword_8());
		}
		otherlv_9='in'
		{
			newLeafNode(otherlv_9, grammarAccess.getReadCommandAccess().getInKeyword_9());
		}
		otherlv_10='variable'
		{
			newLeafNode(otherlv_10, grammarAccess.getReadCommandAccess().getVariableKeyword_10());
		}
		(
			(
				lv_variableName_11_0=RULE_ID
				{
					newLeafNode(lv_variableName_11_0, grammarAccess.getReadCommandAccess().getVariableNameIDTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadCommandRule());
					}
					setWithLastConsumed(
						$current,
						"variableName",
						lv_variableName_11_0,
						"org.xtext.example.mydsl1.MyDsl.ID");
				}
			)
		)
	)
;

RULE_STRING : '"' ('\\' .|~(('\\'|'"')))* '"';

RULE_ID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'0'..'9'|'_')*;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_INT : ('0'..'9')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;
