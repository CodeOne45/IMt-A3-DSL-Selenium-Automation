/**
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl1.myDsl.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl1.myDsl.MyDslPackage;
import org.xtext.example.mydsl1.myDsl.SelectCommand;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Select Command</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl1.myDsl.impl.SelectCommandImpl#getCheckboxName <em>Checkbox Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SelectCommandImpl extends CommandImpl implements SelectCommand
{
  /**
   * The default value of the '{@link #getCheckboxName() <em>Checkbox Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCheckboxName()
   * @generated
   * @ordered
   */
  protected static final String CHECKBOX_NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCheckboxName() <em>Checkbox Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCheckboxName()
   * @generated
   * @ordered
   */
  protected String checkboxName = CHECKBOX_NAME_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SelectCommandImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.SELECT_COMMAND;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCheckboxName()
  {
    return checkboxName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCheckboxName(String newCheckboxName)
  {
    String oldCheckboxName = checkboxName;
    checkboxName = newCheckboxName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.SELECT_COMMAND__CHECKBOX_NAME, oldCheckboxName, checkboxName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.SELECT_COMMAND__CHECKBOX_NAME:
        return getCheckboxName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.SELECT_COMMAND__CHECKBOX_NAME:
        setCheckboxName((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SELECT_COMMAND__CHECKBOX_NAME:
        setCheckboxName(CHECKBOX_NAME_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.SELECT_COMMAND__CHECKBOX_NAME:
        return CHECKBOX_NAME_EDEFAULT == null ? checkboxName != null : !CHECKBOX_NAME_EDEFAULT.equals(checkboxName);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (checkboxName: ");
    result.append(checkboxName);
    result.append(')');
    return result.toString();
  }

} //SelectCommandImpl
