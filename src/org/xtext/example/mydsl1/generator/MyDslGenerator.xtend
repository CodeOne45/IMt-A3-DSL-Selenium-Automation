/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl1.generator;

import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

import org.xtext.example.mydsl1.myDsl.Command
import org.xtext.example.mydsl1.myDsl.Model
import org.xtext.example.mydsl1.myDsl.OpenBrowserCommand
import org.xtext.example.mydsl1.myDsl.NavigateToCommand
import org.xtext.example.mydsl1.myDsl.ClickCommand
import org.xtext.example.mydsl1.myDsl.FillCommand
import org.xtext.example.mydsl1.myDsl.SelectCommand

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class MyDslGenerator extends AbstractGenerator {
    // Selenium Webdriver code generator
	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		if (resource != null) {
			val model = resource.contents.head as Model
			val driverCode = generateWebDriverCode(model)
			fsa.generateFile("src/generated/AutomationTest.java", driverCode)
		}
	}
	
	def generateWebDriverCode(Model model) {
		val commandsCode = model.commands.map[generateCommandCode(it)].join('\n\n')
	    '''
	    package src.generated; // Update the package declaration
	    import org.openqa.selenium.By;
	    import org.openqa.selenium.WebDriver;
	    import org.openqa.selenium.chrome.ChromeDriver;
	    import org.openqa.selenium.chrome.ChromeOptions;
	    import org.openqa.selenium.WebElement;
	  
	    public class AutomationTest {
	      public static void main(String[] args) {	  
	        
	          ''' + commandsCode + '''
	      }
	    }
	    '''		
	}
		

  	def generateCommandCode(Command command) {
  		switch command {
	      OpenBrowserCommand: '''
	        WebDriver driver = (WebDriver) new ChromeDriver();
	      '''
	      NavigateToCommand: '''
	        driver.get("''' + command.url + '''");
	      '''
	      ClickCommand: '''
	        WebElement element = driver.findElement(By.linkText("''' + command.elementText + '''"));
	        element.click();
	      '''
	      FillCommand: '''
	        WebElement element = driver.findElement(By.name("''' + command.fieldName + '''"));
	        element.sendKeys("''' + command.fieldValue + '''");
	      '''
	      SelectCommand: '''
	        WebElement element = driver.findElement(By.name("''' + command.checkboxName + '''"));
	        element.click();
	      '''
	      default: ''
	    }  		
  	}
}




	

	
