/*
 * generated by Xtext 2.32.0
 */
grammar InternalSeleniumDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package www.imta.fr.browserautomation.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package www.imta.fr.browserautomation.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import www.imta.fr.browserautomation.services.SeleniumDslGrammarAccess;

}
@parser::members {
	private SeleniumDslGrammarAccess grammarAccess;

	public void setGrammarAccess(SeleniumDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBrowserDsl
entryRuleBrowserDsl
:
{ before(grammarAccess.getBrowserDslRule()); }
	 ruleBrowserDsl
{ after(grammarAccess.getBrowserDslRule()); } 
	 EOF 
;

// Rule BrowserDsl
ruleBrowserDsl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBrowserDslAccess().getCommandsAssignment()); }
		(rule__BrowserDsl__CommandsAssignment)*
		{ after(grammarAccess.getBrowserDslAccess().getCommandsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCommand
entryRuleCommand
:
{ before(grammarAccess.getCommandRule()); }
	 ruleCommand
{ after(grammarAccess.getCommandRule()); } 
	 EOF 
;

// Rule Command
ruleCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCommandAccess().getAlternatives()); }
		(rule__Command__Alternatives)
		{ after(grammarAccess.getCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOpenBrowser
entryRuleOpenBrowser
:
{ before(grammarAccess.getOpenBrowserRule()); }
	 ruleOpenBrowser
{ after(grammarAccess.getOpenBrowserRule()); } 
	 EOF 
;

// Rule OpenBrowser
ruleOpenBrowser 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOpenBrowserAccess().getGroup()); }
		(rule__OpenBrowser__Group__0)
		{ after(grammarAccess.getOpenBrowserAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOMCommand
entryRuleDOMCommand
:
{ before(grammarAccess.getDOMCommandRule()); }
	 ruleDOMCommand
{ after(grammarAccess.getDOMCommandRule()); } 
	 EOF 
;

// Rule DOMCommand
ruleDOMCommand 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOMCommandAccess().getAlternatives()); }
		(rule__DOMCommand__Alternatives)
		{ after(grammarAccess.getDOMCommandAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoTo
entryRuleGoTo
:
{ before(grammarAccess.getGoToRule()); }
	 ruleGoTo
{ after(grammarAccess.getGoToRule()); } 
	 EOF 
;

// Rule GoTo
ruleGoTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoToAccess().getGroup()); }
		(rule__GoTo__Group__0)
		{ after(grammarAccess.getGoToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClick
entryRuleClick
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClickAccess().getGroup()); }
		(rule__Click__Group__0)
		{ after(grammarAccess.getClickAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCopy
entryRuleCopy
:
{ before(grammarAccess.getCopyRule()); }
	 ruleCopy
{ after(grammarAccess.getCopyRule()); } 
	 EOF 
;

// Rule Copy
ruleCopy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCopyAccess().getGroup()); }
		(rule__Copy__Group__0)
		{ after(grammarAccess.getCopyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePaste
entryRulePaste
:
{ before(grammarAccess.getPasteRule()); }
	 rulePaste
{ after(grammarAccess.getPasteRule()); } 
	 EOF 
;

// Rule Paste
rulePaste 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPasteAccess().getGroup()); }
		(rule__Paste__Group__0)
		{ after(grammarAccess.getPasteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getGroup()); }
		(rule__Insert__Group__0)
		{ after(grammarAccess.getInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelector
entryRuleSelector
:
{ before(grammarAccess.getSelectorRule()); }
	 ruleSelector
{ after(grammarAccess.getSelectorRule()); } 
	 EOF 
;

// Rule Selector
ruleSelector 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorAccess().getGroup()); }
		(rule__Selector__Group__0)
		{ after(grammarAccess.getSelectorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributes
entryRuleAttributes
:
{ before(grammarAccess.getAttributesRule()); }
	 ruleAttributes
{ after(grammarAccess.getAttributesRule()); } 
	 EOF 
;

// Rule Attributes
ruleAttributes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributesAccess().getGroup()); }
		(rule__Attributes__Group__0)
		{ after(grammarAccess.getAttributesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementAttribute
entryRuleElementAttribute
:
{ before(grammarAccess.getElementAttributeRule()); }
	 ruleElementAttribute
{ after(grammarAccess.getElementAttributeRule()); } 
	 EOF 
;

// Rule ElementAttribute
ruleElementAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAttributeAccess().getGroup()); }
		(rule__ElementAttribute__Group__0)
		{ after(grammarAccess.getElementAttributeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContent
entryRuleContent
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContentAccess().getAlternatives()); }
		(rule__Content__Alternatives)
		{ after(grammarAccess.getContentAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClipboardContent
entryRuleClipboardContent
:
{ before(grammarAccess.getClipboardContentRule()); }
	 ruleClipboardContent
{ after(grammarAccess.getClipboardContentRule()); } 
	 EOF 
;

// Rule ClipboardContent
ruleClipboardContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClipboardContentAccess().getGroup()); }
		(rule__ClipboardContent__Group__0)
		{ after(grammarAccess.getClipboardContentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringContent
entryRuleStringContent
:
{ before(grammarAccess.getStringContentRule()); }
	 ruleStringContent
{ after(grammarAccess.getStringContentRule()); } 
	 EOF 
;

// Rule StringContent
ruleStringContent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringContentAccess().getValueAssignment()); }
		(rule__StringContent__ValueAssignment)
		{ after(grammarAccess.getStringContentAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperties
entryRuleProperties
:
{ before(grammarAccess.getPropertiesRule()); }
	 ruleProperties
{ after(grammarAccess.getPropertiesRule()); } 
	 EOF 
;

// Rule Properties
ruleProperties 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertiesAccess().getGroup()); }
		(rule__Properties__Group__0)
		{ after(grammarAccess.getPropertiesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementProperty
entryRuleElementProperty
:
{ before(grammarAccess.getElementPropertyRule()); }
	 ruleElementProperty
{ after(grammarAccess.getElementPropertyRule()); } 
	 EOF 
;

// Rule ElementProperty
ruleElementProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementPropertyAccess().getGroup()); }
		(rule__ElementProperty__Group__0)
		{ after(grammarAccess.getElementPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectorPredicate
entryRuleSelectorPredicate
:
{ before(grammarAccess.getSelectorPredicateRule()); }
	 ruleSelectorPredicate
{ after(grammarAccess.getSelectorPredicateRule()); } 
	 EOF 
;

// Rule SelectorPredicate
ruleSelectorPredicate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectorPredicateAccess().getAlternatives()); }
		(rule__SelectorPredicate__Alternatives)
		{ after(grammarAccess.getSelectorPredicateAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAllCondition
entryRuleAllCondition
:
{ before(grammarAccess.getAllConditionRule()); }
	 ruleAllCondition
{ after(grammarAccess.getAllConditionRule()); } 
	 EOF 
;

// Rule AllCondition
ruleAllCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAllConditionAccess().getGroup()); }
		(rule__AllCondition__Group__0)
		{ after(grammarAccess.getAllConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntWithSuffix
entryRuleIntWithSuffix
:
{ before(grammarAccess.getIntWithSuffixRule()); }
	 ruleIntWithSuffix
{ after(grammarAccess.getIntWithSuffixRule()); } 
	 EOF 
;

// Rule IntWithSuffix
ruleIntWithSuffix 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntWithSuffixAccess().getGroup()); }
		(rule__IntWithSuffix__Group__0)
		{ after(grammarAccess.getIntWithSuffixAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrdinalCondition
entryRuleOrdinalCondition
:
{ before(grammarAccess.getOrdinalConditionRule()); }
	 ruleOrdinalCondition
{ after(grammarAccess.getOrdinalConditionRule()); } 
	 EOF 
;

// Rule OrdinalCondition
ruleOrdinalCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrdinalConditionAccess().getGroup()); }
		(rule__OrdinalCondition__Group__0)
		{ after(grammarAccess.getOrdinalConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLastCondition
entryRuleLastCondition
:
{ before(grammarAccess.getLastConditionRule()); }
	 ruleLastCondition
{ after(grammarAccess.getLastConditionRule()); } 
	 EOF 
;

// Rule LastCondition
ruleLastCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLastConditionAccess().getGroup()); }
		(rule__LastCondition__Group__0)
		{ after(grammarAccess.getLastConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFirstCondition
entryRuleFirstCondition
:
{ before(grammarAccess.getFirstConditionRule()); }
	 ruleFirstCondition
{ after(grammarAccess.getFirstConditionRule()); } 
	 EOF 
;

// Rule FirstCondition
ruleFirstCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFirstConditionAccess().getGroup()); }
		(rule__FirstCondition__Group__0)
		{ after(grammarAccess.getFirstConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMatcher
entryRuleMatcher
:
{ before(grammarAccess.getMatcherRule()); }
	 ruleMatcher
{ after(grammarAccess.getMatcherRule()); } 
	 EOF 
;

// Rule Matcher
ruleMatcher 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMatcherAccess().getAlternatives()); }
		(rule__Matcher__Alternatives)
		{ after(grammarAccess.getMatcherAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerify
entryRuleVerify
:
{ before(grammarAccess.getVerifyRule()); }
	 ruleVerify
{ after(grammarAccess.getVerifyRule()); } 
	 EOF 
;

// Rule Verify
ruleVerify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerifyAccess().getGroup()); }
		(rule__Verify__Group__0)
		{ after(grammarAccess.getVerifyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDynamicURL
entryRuleDynamicURL
:
{ before(grammarAccess.getDynamicURLRule()); }
	 ruleDynamicURL
{ after(grammarAccess.getDynamicURLRule()); } 
	 EOF 
;

// Rule DynamicURL
ruleDynamicURL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDynamicURLAccess().getAlternatives()); }
		(rule__DynamicURL__Alternatives)
		{ after(grammarAccess.getDynamicURLAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Command__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCommandAccess().getOpenBrowserParserRuleCall_0()); }
		ruleOpenBrowser
		{ after(grammarAccess.getCommandAccess().getOpenBrowserParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getGoToParserRuleCall_1()); }
		ruleGoTo
		{ after(grammarAccess.getCommandAccess().getGoToParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getCommandAccess().getDOMCommandParserRuleCall_2()); }
		ruleDOMCommand
		{ after(grammarAccess.getCommandAccess().getDOMCommandParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DOMCommand__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDOMCommandAccess().getClickParserRuleCall_0()); }
		ruleClick
		{ after(grammarAccess.getDOMCommandAccess().getClickParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDOMCommandAccess().getCopyParserRuleCall_1()); }
		ruleCopy
		{ after(grammarAccess.getDOMCommandAccess().getCopyParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDOMCommandAccess().getPasteParserRuleCall_2()); }
		rulePaste
		{ after(grammarAccess.getDOMCommandAccess().getPasteParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDOMCommandAccess().getVerifyParserRuleCall_3()); }
		ruleVerify
		{ after(grammarAccess.getDOMCommandAccess().getVerifyParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getDOMCommandAccess().getInsertParserRuleCall_4()); }
		ruleInsert
		{ after(grammarAccess.getDOMCommandAccess().getInsertParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoToAccess().getUrlAssignment_2_0()); }
		(rule__GoTo__UrlAssignment_2_0)
		{ after(grammarAccess.getGoToAccess().getUrlAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getGoToAccess().getURLKeyword_2_1()); }
		'URL'
		{ after(grammarAccess.getGoToAccess().getURLKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickAccess().getGroup_1_0()); }
		(rule__Click__Group_1_0__0)
		{ after(grammarAccess.getClickAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getClickAccess().getSelectKeyword_1_1()); }
		'select'
		{ after(grammarAccess.getClickAccess().getSelectKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContentAccess().getClipboardContentParserRuleCall_0()); }
		ruleClipboardContent
		{ after(grammarAccess.getContentAccess().getClipboardContentParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getContentAccess().getStringContentParserRuleCall_1()); }
		ruleStringContent
		{ after(grammarAccess.getContentAccess().getStringContentParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementProperty__PropertyAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPropertyAccess().getPropertySelectedKeyword_1_0_0()); }
		'selected'
		{ after(grammarAccess.getElementPropertyAccess().getPropertySelectedKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementPropertyAccess().getPropertyVisibleKeyword_1_0_1()); }
		'visible'
		{ after(grammarAccess.getElementPropertyAccess().getPropertyVisibleKeyword_1_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementPropertyAccess().getPropertyEnabledKeyword_1_0_2()); }
		'enabled'
		{ after(grammarAccess.getElementPropertyAccess().getPropertyEnabledKeyword_1_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectorPredicate__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorPredicateAccess().getAllConditionParserRuleCall_0()); }
		ruleAllCondition
		{ after(grammarAccess.getSelectorPredicateAccess().getAllConditionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorPredicateAccess().getOrdinalConditionParserRuleCall_1()); }
		ruleOrdinalCondition
		{ after(grammarAccess.getSelectorPredicateAccess().getOrdinalConditionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorPredicateAccess().getLastConditionParserRuleCall_2()); }
		ruleLastCondition
		{ after(grammarAccess.getSelectorPredicateAccess().getLastConditionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSelectorPredicateAccess().getFirstConditionParserRuleCall_3()); }
		ruleFirstCondition
		{ after(grammarAccess.getSelectorPredicateAccess().getFirstConditionParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Matcher__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMatcherAccess().getContainingKeyword_0()); }
		'containing'
		{ after(grammarAccess.getMatcherAccess().getContainingKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getMatcherAccess().getMatchingKeyword_1()); }
		'matching'
		{ after(grammarAccess.getMatcherAccess().getMatchingKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DynamicURL__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDynamicURLAccess().getURLTerminalRuleCall_0()); }
		RULE_URL
		{ after(grammarAccess.getDynamicURLAccess().getURLTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDynamicURLAccess().getSTRINGTerminalRuleCall_1()); }
		RULE_STRING
		{ after(grammarAccess.getDynamicURLAccess().getSTRINGTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenBrowser__Group__0__Impl
	rule__OpenBrowser__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenBrowserAccess().getOpenBrowserAction_0()); }
	()
	{ after(grammarAccess.getOpenBrowserAccess().getOpenBrowserAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenBrowser__Group__1__Impl
	rule__OpenBrowser__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenBrowserAccess().getOpenKeyword_1()); }
	'open'
	{ after(grammarAccess.getOpenBrowserAccess().getOpenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenBrowser__Group__2__Impl
	rule__OpenBrowser__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenBrowserAccess().getAKeyword_2()); }
	'a'
	{ after(grammarAccess.getOpenBrowserAccess().getAKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenBrowser__Group__3__Impl
	rule__OpenBrowser__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenBrowserAccess().getBrowserKeyword_3()); }
	'browser'
	{ after(grammarAccess.getOpenBrowserAccess().getBrowserKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OpenBrowser__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OpenBrowser__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOpenBrowserAccess().getWindowKeyword_4()); }
	'window'
	{ after(grammarAccess.getOpenBrowserAccess().getWindowKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__0__Impl
	rule__GoTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getGoKeyword_0()); }
	'go'
	{ after(grammarAccess.getGoToAccess().getGoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__1__Impl
	rule__GoTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getGoToAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getAlternatives_2()); }
	(rule__GoTo__Alternatives_2)?
	{ after(grammarAccess.getGoToAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__0__Impl
	rule__Click__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getClickAction_0()); }
	()
	{ after(grammarAccess.getClickAccess().getClickAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__1__Impl
	rule__Click__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getAlternatives_1()); }
	(rule__Click__Alternatives_1)
	{ after(grammarAccess.getClickAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getElementAssignment_2()); }
	(rule__Click__ElementAssignment_2)
	{ after(grammarAccess.getClickAccess().getElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group_1_0__0__Impl
	rule__Click__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getClickKeyword_1_0_0()); }
	'click'
	{ after(grammarAccess.getClickAccess().getClickKeyword_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getOnKeyword_1_0_1()); }
	'on'
	{ after(grammarAccess.getClickAccess().getOnKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Copy__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__0__Impl
	rule__Copy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getCopyAction_0()); }
	()
	{ after(grammarAccess.getCopyAccess().getCopyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__1__Impl
	rule__Copy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getCopyKeyword_1()); }
	'copy'
	{ after(grammarAccess.getCopyAccess().getCopyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__2__Impl
	rule__Copy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getTheKeyword_2()); }
	'the'
	{ after(grammarAccess.getCopyAccess().getTheKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__3__Impl
	rule__Copy__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getPropertyKeyword_3()); }
	'property'
	{ after(grammarAccess.getCopyAccess().getPropertyKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__4__Impl
	rule__Copy__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getPropertyAssignment_4()); }
	(rule__Copy__PropertyAssignment_4)
	{ after(grammarAccess.getCopyAccess().getPropertyAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__5__Impl
	rule__Copy__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getOfKeyword_5()); }
	'of'
	{ after(grammarAccess.getCopyAccess().getOfKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__6__Impl
	rule__Copy__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getElementAssignment_6()); }
	(rule__Copy__ElementAssignment_6)
	{ after(grammarAccess.getCopyAccess().getElementAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__7__Impl
	rule__Copy__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getAsKeyword_7()); }
	'as'
	{ after(grammarAccess.getCopyAccess().getAsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Copy__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCopyAccess().getKeyAssignment_8()); }
	(rule__Copy__KeyAssignment_8)
	{ after(grammarAccess.getCopyAccess().getKeyAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Paste__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__0__Impl
	rule__Paste__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getPasteKeyword_0()); }
	'paste'
	{ after(grammarAccess.getPasteAccess().getPasteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__1__Impl
	rule__Paste__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getTheKeyword_1()); }
	'the'
	{ after(grammarAccess.getPasteAccess().getTheKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__2__Impl
	rule__Paste__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getContentKeyword_2()); }
	'content'
	{ after(grammarAccess.getPasteAccess().getContentKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__3__Impl
	rule__Paste__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getOfKeyword_3()); }
	'of'
	{ after(grammarAccess.getPasteAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__4__Impl
	rule__Paste__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getTheKeyword_4()); }
	'the'
	{ after(grammarAccess.getPasteAccess().getTheKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__5__Impl
	rule__Paste__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getClipboardKeyword_5()); }
	'clipboard'
	{ after(grammarAccess.getPasteAccess().getClipboardKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__6__Impl
	rule__Paste__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getInKeyword_6()); }
	'in'
	{ after(grammarAccess.getPasteAccess().getInKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Paste__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPasteAccess().getElementAssignment_7()); }
	(rule__Paste__ElementAssignment_7)
	{ after(grammarAccess.getPasteAccess().getElementAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__0__Impl
	rule__Insert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getFillKeyword_0()); }
	'fill'
	{ after(grammarAccess.getInsertAccess().getFillKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__1__Impl
	rule__Insert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getElementAssignment_1()); }
	(rule__Insert__ElementAssignment_1)
	{ after(grammarAccess.getInsertAccess().getElementAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__2__Impl
	rule__Insert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getWithKeyword_2()); }
	'with'
	{ after(grammarAccess.getInsertAccess().getWithKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getContentAssignment_3()); }
	(rule__Insert__ContentAssignment_3)
	{ after(grammarAccess.getInsertAccess().getContentAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__0__Impl
	rule__Selector__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getPredicateAssignment_0()); }
	(rule__Selector__PredicateAssignment_0)
	{ after(grammarAccess.getSelectorAccess().getPredicateAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__1__Impl
	rule__Selector__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getDomTypeAssignment_1()); }
	(rule__Selector__DomTypeAssignment_1)
	{ after(grammarAccess.getSelectorAccess().getDomTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__2__Impl
	rule__Selector__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getGroup_2()); }
	(rule__Selector__Group_2__0)?
	{ after(grammarAccess.getSelectorAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__3__Impl
	rule__Selector__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getGroup_3()); }
	(rule__Selector__Group_3__0)?
	{ after(grammarAccess.getSelectorAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__4__Impl
	rule__Selector__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getGroup_4()); }
	(rule__Selector__Group_4__0)?
	{ after(grammarAccess.getSelectorAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getGroup_5()); }
	(rule__Selector__Group_5__0)?
	{ after(grammarAccess.getSelectorAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_2__0__Impl
	rule__Selector__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getWithKeyword_2_0()); }
	'with'
	{ after(grammarAccess.getSelectorAccess().getWithKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_2__1__Impl
	rule__Selector__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getPropertiesKeyword_2_1()); }
	'properties'
	{ after(grammarAccess.getSelectorAccess().getPropertiesKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getAttributesAssignment_2_2()); }
	(rule__Selector__AttributesAssignment_2_2)
	{ after(grammarAccess.getSelectorAccess().getAttributesAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__0__Impl
	rule__Selector__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getWithKeyword_3_0()); }
	'with'
	{ after(grammarAccess.getSelectorAccess().getWithKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__1__Impl
	rule__Selector__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getAssociatedKeyword_3_1()); }
	'associated'
	{ after(grammarAccess.getSelectorAccess().getAssociatedKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__2__Impl
	rule__Selector__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLabelKeyword_3_2()); }
	'label'
	{ after(grammarAccess.getSelectorAccess().getLabelKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getLabelAssignment_3_3()); }
	(rule__Selector__LabelAssignment_3_3)
	{ after(grammarAccess.getSelectorAccess().getLabelAssignment_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_4__0__Impl
	rule__Selector__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getThatKeyword_4_0()); }
	'that'
	{ after(grammarAccess.getSelectorAccess().getThatKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_4__1__Impl
	rule__Selector__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getIsKeyword_4_1()); }
	'is'
	{ after(grammarAccess.getSelectorAccess().getIsKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getPropertiesAssignment_4_2()); }
	(rule__Selector__PropertiesAssignment_4_2)
	{ after(grammarAccess.getSelectorAccess().getPropertiesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selector__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_5__0__Impl
	rule__Selector__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getInKeyword_5_0()); }
	'in'
	{ after(grammarAccess.getSelectorAccess().getInKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selector__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectorAccess().getParentAssignment_5_1()); }
	(rule__Selector__ParentAssignment_5_1)
	{ after(grammarAccess.getSelectorAccess().getParentAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attributes__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__0__Impl
	rule__Attributes__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAttributesAssignment_0()); }
	(rule__Attributes__AttributesAssignment_0)
	{ after(grammarAccess.getAttributesAccess().getAttributesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getGroup_1()); }
	(rule__Attributes__Group_1__0)?
	{ after(grammarAccess.getAttributesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Attributes__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group_1__0__Impl
	rule__Attributes__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getAttributesAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Attributes__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAttributesAccess().getAttributesAssignment_1_1()); }
	(rule__Attributes__AttributesAssignment_1_1)
	{ after(grammarAccess.getAttributesAccess().getAttributesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementAttribute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAttribute__Group__0__Impl
	rule__ElementAttribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAttributeAccess().getNameAssignment_0()); }
	(rule__ElementAttribute__NameAssignment_0)
	{ after(grammarAccess.getElementAttributeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAttribute__Group__1__Impl
	rule__ElementAttribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAttributeAccess().getMatcherAssignment_1()); }
	(rule__ElementAttribute__MatcherAssignment_1)
	{ after(grammarAccess.getElementAttributeAccess().getMatcherAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementAttribute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAttributeAccess().getValueAssignment_2()); }
	(rule__ElementAttribute__ValueAssignment_2)
	{ after(grammarAccess.getElementAttributeAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClipboardContent__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClipboardContent__Group__0__Impl
	rule__ClipboardContent__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipboardContentAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getClipboardContentAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClipboardContent__Group__1__Impl
	rule__ClipboardContent__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipboardContentAccess().getSavedKeyword_1()); }
	'saved'
	{ after(grammarAccess.getClipboardContentAccess().getSavedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClipboardContent__Group__2__Impl
	rule__ClipboardContent__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipboardContentAccess().getContentKeyword_2()); }
	'content'
	{ after(grammarAccess.getClipboardContentAccess().getContentKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClipboardContent__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClipboardContentAccess().getKeyAssignment_3()); }
	(rule__ClipboardContent__KeyAssignment_3)
	{ after(grammarAccess.getClipboardContentAccess().getKeyAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__0__Impl
	rule__Properties__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertiesAssignment_0()); }
	(rule__Properties__PropertiesAssignment_0)
	{ after(grammarAccess.getPropertiesAccess().getPropertiesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getGroup_1()); }
	(rule__Properties__Group_1__0)?
	{ after(grammarAccess.getPropertiesAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Properties__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group_1__0__Impl
	rule__Properties__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getAndKeyword_1_0()); }
	'and'
	{ after(grammarAccess.getPropertiesAccess().getAndKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Properties__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertiesAccess().getPropertiesAssignment_1_1()); }
	(rule__Properties__PropertiesAssignment_1_1)
	{ after(grammarAccess.getPropertiesAccess().getPropertiesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElementProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementProperty__Group__0__Impl
	rule__ElementProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementPropertyAccess().getNegatedAssignment_0()); }
	(rule__ElementProperty__NegatedAssignment_0)?
	{ after(grammarAccess.getElementPropertyAccess().getNegatedAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElementProperty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementPropertyAccess().getPropertyAssignment_1()); }
	(rule__ElementProperty__PropertyAssignment_1)
	{ after(grammarAccess.getElementPropertyAccess().getPropertyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AllCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllCondition__Group__0__Impl
	rule__AllCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllConditionAccess().getAllConditionAction_0()); }
	()
	{ after(grammarAccess.getAllConditionAccess().getAllConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllCondition__Group__1__Impl
	rule__AllCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllConditionAccess().getAllKeyword_1()); }
	'all'
	{ after(grammarAccess.getAllConditionAccess().getAllKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllCondition__Group__2__Impl
	rule__AllCondition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllConditionAccess().getElementsKeyword_2()); }
	'elements'
	{ after(grammarAccess.getAllConditionAccess().getElementsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllCondition__Group__3__Impl
	rule__AllCondition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllConditionAccess().getOfKeyword_3()); }
	'of'
	{ after(grammarAccess.getAllConditionAccess().getOfKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AllCondition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllCondition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAllConditionAccess().getTypeKeyword_4()); }
	'type'
	{ after(grammarAccess.getAllConditionAccess().getTypeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntWithSuffix__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntWithSuffix__Group__0__Impl
	rule__IntWithSuffix__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntWithSuffix__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntWithSuffixAccess().getValueAssignment_0()); }
	(rule__IntWithSuffix__ValueAssignment_0)
	{ after(grammarAccess.getIntWithSuffixAccess().getValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntWithSuffix__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntWithSuffix__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntWithSuffix__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntWithSuffixAccess().getSuffixTerminalRuleCall_1()); }
	RULE_SUFFIX
	{ after(grammarAccess.getIntWithSuffixAccess().getSuffixTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__OrdinalCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrdinalCondition__Group__0__Impl
	rule__OrdinalCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrdinalCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrdinalConditionAccess().getTheKeyword_0()); }
	'the'
	{ after(grammarAccess.getOrdinalConditionAccess().getTheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrdinalCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__OrdinalCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrdinalCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrdinalConditionAccess().getOrdinalAssignment_1()); }
	(rule__OrdinalCondition__OrdinalAssignment_1)
	{ after(grammarAccess.getOrdinalConditionAccess().getOrdinalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LastCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastCondition__Group__0__Impl
	rule__LastCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LastCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastConditionAccess().getLastConditionAction_0()); }
	()
	{ after(grammarAccess.getLastConditionAccess().getLastConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastCondition__Group__1__Impl
	rule__LastCondition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LastCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastConditionAccess().getTheKeyword_1()); }
	'the'
	{ after(grammarAccess.getLastConditionAccess().getTheKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LastCondition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LastCondition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LastCondition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLastConditionAccess().getLastKeyword_2()); }
	'last'
	{ after(grammarAccess.getLastConditionAccess().getLastKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FirstCondition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstCondition__Group__0__Impl
	rule__FirstCondition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstCondition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstConditionAccess().getFirstConditionAction_0()); }
	()
	{ after(grammarAccess.getFirstConditionAccess().getFirstConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstCondition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FirstCondition__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FirstCondition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFirstConditionAccess().getTheKeyword_1()); }
	'the'
	{ after(grammarAccess.getFirstConditionAccess().getTheKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__0__Impl
	rule__Verify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
	'verify'
	{ after(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__1__Impl
	rule__Verify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getThatKeyword_1()); }
	'that'
	{ after(grammarAccess.getVerifyAccess().getThatKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__2__Impl
	rule__Verify__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getSelectorAssignment_2()); }
	(rule__Verify__SelectorAssignment_2)
	{ after(grammarAccess.getVerifyAccess().getSelectorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__3__Impl
	rule__Verify__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getIsKeyword_3()); }
	'is'
	{ after(grammarAccess.getVerifyAccess().getIsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__4__Impl
	rule__Verify__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getPropertiesAssignment_4()); }
	(rule__Verify__PropertiesAssignment_4)
	{ after(grammarAccess.getVerifyAccess().getPropertiesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getGroup_5()); }
	(rule__Verify__Group_5__0)?
	{ after(grammarAccess.getVerifyAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group_5__0__Impl
	rule__Verify__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getAndKeyword_5_0()); }
	'and'
	{ after(grammarAccess.getVerifyAccess().getAndKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getPropertiesAssignment_5_1()); }
	(rule__Verify__PropertiesAssignment_5_1)
	{ after(grammarAccess.getVerifyAccess().getPropertiesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BrowserDsl__CommandsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowserDslAccess().getCommandsCommandParserRuleCall_0()); }
		ruleCommand
		{ after(grammarAccess.getBrowserDslAccess().getCommandsCommandParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__UrlAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoToAccess().getUrlDynamicURLParserRuleCall_2_0_0()); }
		ruleDynamicURL
		{ after(grammarAccess.getGoToAccess().getUrlDynamicURLParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__ElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickAccess().getElementSelectorParserRuleCall_2_0()); }
		ruleSelector
		{ after(grammarAccess.getClickAccess().getElementSelectorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__PropertyAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getPropertyHTML_ATTRIBUTETerminalRuleCall_4_0()); }
		RULE_HTML_ATTRIBUTE
		{ after(grammarAccess.getCopyAccess().getPropertyHTML_ATTRIBUTETerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__ElementAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getElementSelectorParserRuleCall_6_0()); }
		ruleSelector
		{ after(grammarAccess.getCopyAccess().getElementSelectorParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Copy__KeyAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCopyAccess().getKeySTRINGTerminalRuleCall_8_0()); }
		RULE_STRING
		{ after(grammarAccess.getCopyAccess().getKeySTRINGTerminalRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Paste__ElementAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPasteAccess().getElementSelectorParserRuleCall_7_0()); }
		ruleSelector
		{ after(grammarAccess.getPasteAccess().getElementSelectorParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ElementAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getElementSelectorParserRuleCall_1_0()); }
		ruleSelector
		{ after(grammarAccess.getInsertAccess().getElementSelectorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__ContentAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getContentContentParserRuleCall_3_0()); }
		ruleContent
		{ after(grammarAccess.getInsertAccess().getContentContentParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__PredicateAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getPredicateSelectorPredicateParserRuleCall_0_0()); }
		ruleSelectorPredicate
		{ after(grammarAccess.getSelectorAccess().getPredicateSelectorPredicateParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__DomTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getDomTypeSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectorAccess().getDomTypeSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__AttributesAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getAttributesAttributesParserRuleCall_2_2_0()); }
		ruleAttributes
		{ after(grammarAccess.getSelectorAccess().getAttributesAttributesParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__LabelAssignment_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getLabelSTRINGTerminalRuleCall_3_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectorAccess().getLabelSTRINGTerminalRuleCall_3_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__PropertiesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getPropertiesPropertiesParserRuleCall_4_2_0()); }
		ruleProperties
		{ after(grammarAccess.getSelectorAccess().getPropertiesPropertiesParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selector__ParentAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectorAccess().getParentSelectorParserRuleCall_5_1_0()); }
		ruleSelector
		{ after(grammarAccess.getSelectorAccess().getParentSelectorParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__AttributesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesAccess().getAttributesElementAttributeParserRuleCall_0_0()); }
		ruleElementAttribute
		{ after(grammarAccess.getAttributesAccess().getAttributesElementAttributeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attributes__AttributesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributesAccess().getAttributesElementAttributeParserRuleCall_1_1_0()); }
		ruleElementAttribute
		{ after(grammarAccess.getAttributesAccess().getAttributesElementAttributeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAttributeAccess().getNameHTML_ATTRIBUTETerminalRuleCall_0_0()); }
		RULE_HTML_ATTRIBUTE
		{ after(grammarAccess.getElementAttributeAccess().getNameHTML_ATTRIBUTETerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__MatcherAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAttributeAccess().getMatcherMatcherParserRuleCall_1_0()); }
		ruleMatcher
		{ after(grammarAccess.getElementAttributeAccess().getMatcherMatcherParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementAttribute__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAttributeAccess().getValueContentParserRuleCall_2_0()); }
		ruleContent
		{ after(grammarAccess.getElementAttributeAccess().getValueContentParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClipboardContent__KeyAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClipboardContentAccess().getKeySTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getClipboardContentAccess().getKeySTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringContent__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringContentAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringContentAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__PropertiesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertiesAccess().getPropertiesElementPropertyParserRuleCall_0_0()); }
		ruleElementProperty
		{ after(grammarAccess.getPropertiesAccess().getPropertiesElementPropertyParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Properties__PropertiesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertiesAccess().getPropertiesElementPropertyParserRuleCall_1_1_0()); }
		ruleElementProperty
		{ after(grammarAccess.getPropertiesAccess().getPropertiesElementPropertyParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementProperty__NegatedAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPropertyAccess().getNegatedNotKeyword_0_0()); }
		(
			{ before(grammarAccess.getElementPropertyAccess().getNegatedNotKeyword_0_0()); }
			'not'
			{ after(grammarAccess.getElementPropertyAccess().getNegatedNotKeyword_0_0()); }
		)
		{ after(grammarAccess.getElementPropertyAccess().getNegatedNotKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementProperty__PropertyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementPropertyAccess().getPropertyAlternatives_1_0()); }
		(rule__ElementProperty__PropertyAlternatives_1_0)
		{ after(grammarAccess.getElementPropertyAccess().getPropertyAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntWithSuffix__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntWithSuffixAccess().getValueINTTerminalRuleCall_0_0()); }
		RULE_INT
		{ after(grammarAccess.getIntWithSuffixAccess().getValueINTTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__OrdinalCondition__OrdinalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrdinalConditionAccess().getOrdinalIntWithSuffixParserRuleCall_1_0()); }
		ruleIntWithSuffix
		{ after(grammarAccess.getOrdinalConditionAccess().getOrdinalIntWithSuffixParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__SelectorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getSelectorSelectorParserRuleCall_2_0()); }
		ruleSelector
		{ after(grammarAccess.getVerifyAccess().getSelectorSelectorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__PropertiesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getPropertiesElementPropertyParserRuleCall_4_0()); }
		ruleElementProperty
		{ after(grammarAccess.getVerifyAccess().getPropertiesElementPropertyParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__PropertiesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getPropertiesElementPropertyParserRuleCall_5_1_0()); }
		ruleElementProperty
		{ after(grammarAccess.getVerifyAccess().getPropertiesElementPropertyParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_SUFFIX : ('st'|'nd'|'rd'|'th');

RULE_HTML_ATTRIBUTE : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'-'|'0'..'9')*;

RULE_URL : ('http' 's'? '://')? RULE_DOMAIN (':' RULE_DOMAIN)* ('.' RULE_DOMAIN)* ('/' ('~'|RULE_DOMAIN))* ('?' ('~'|RULE_DOMAIN))* ('#' ('~'|RULE_DOMAIN))?;

fragment RULE_DOMAIN : ('a'..'z'|'A'..'Z'|'_'|'-') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
